# Yaml-files in the `protocol` directory specify which serializable objects
# should be generated. When you add or modify a file, you will need to run
# `serverpod generate` to make the generated classes available in the server and
# client.
#
# Please consult the documentation for more information on what you can add to
# your yaml-files.

# Name of the class to generate.
class: Comment

# Add the table key, if this class represents a row in the database.
table: comment

# The fields (and columns if connected to the database) of the class. Supported types are
# `bool`, `int`, `double`, `String`, `UuidValue`, `Duration`, `DateTime`, `ByteData`,
# and other serializable classes, exceptions and enums.
# You can also add lists of objects and types have support for null safety.
# Eg. `List<int>?` or `List<MyOtherClass?>`.
fields:
  comment: String
  book: Book?, relation(name=book_comments)
  parent: Comment?, relation(name=comment_replies, optional, onDelete=SetNull)
  replies: List<Comment>?, relation(name=comment_replies)
  userInfo: module:auth:UserInfo?, relation 

indexes:
  user_comment_idx:
    fields: userInfoId